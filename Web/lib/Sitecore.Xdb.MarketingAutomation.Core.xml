<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Xdb.MarketingAutomation.Core</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.CollectionTestOperation">
            <summary>
            Defines values for the test operation against a collection of values.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Activity.CollectionTestOperation.Any">
            <summary>
            Match any element in the list.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Activity.CollectionTestOperation.All">
            <summary>
            Match all elements in the list.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessRestartPlan">
            <summary>
            A result indicating the enrollment should restart the plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessRestartPlan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessRestartPlan"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices">
            <summary>
            Provides access to the default set of services for activities.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.#ctor(Sitecore.XConnect.IXdbContext,Sitecore.Marketing.Definitions.DefinitionManagerFactory,Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider,Sitecore.Xdb.ReferenceData.Service.IReferenceDataService,Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService,Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentOperations)">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.Collection">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.Definitions">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.Taxonomies">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.Reference">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.ConditionEvaluation">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityServices.ActivityEnrollmentOperations">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivity">
            <summary>
            Defines an activity type for an automation plan.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivity.Services">
            <summary>
            Gets or sets the default set of services for the activity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivity.Invoke(Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext)">
            <summary>
            Invokes the activity.
            </summary>
            <param name="context">The context to invoke the activity with.</param>
            <returns>The result for the invocation.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices">
            <summary>
            Defines the default set of services made available to activities.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.Collection">
            <summary>
            Gets the<see cref= "T:Sitecore.XConnect.IXdbContext" /> which provides access to XConnect.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.Definitions">
            <summary>
            Gets the <see cref="T:Sitecore.Marketing.Definitions.DefinitionManagerFactory"/> which provides access to the Marketing Operations API Definition Managers.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.Taxonomies">
            <summary>
            Gets the <see cref="T:Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider"/> which provides access to the Marketing Operations API Taxonomy Manager Provider.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.Reference">
            <summary>
            Gets the <see cref="T:Sitecore.Xdb.ReferenceData.Service.IReferenceDataService"/> which provides access to the Reference Data Service.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.ConditionEvaluation">
            <summary>
            Gets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService"/> which provides access to the Condition Evaluation Service.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivityServices.ActivityEnrollmentOperations">
            <summary>
            Gets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentOperations"/> which allows performing operations on enrollments.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult">
            <summary>
            Defines a result from an activity invocation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult.#ctor(System.Boolean)">
            <summary>
            Create a new instance.
            </summary>
            <param name="success">Indicates whether the result is a success result.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult.Success">
            <summary>
            Gets whether the result is a success result or not.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure">
            <summary>
            A result indicating the activity invocation failed and should be rescheduled.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.#ctor(System.String)">
            <summary>
            Create a new instance.
            </summary>
            <param name="message">The message indicating why the activity invocation failed.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.#ctor(System.String,System.TimeSpan)">
            <summary>
            Create a new instance.
            </summary>
            <param name="message">The message indicating why the activity invocation failed.</param>
            <param name="reschedulePeriod">When to reschedule the activity for.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.#ctor(System.String,System.TimeSpan,System.Boolean)">
            <summary>
            Create a new instance.
            </summary>
            <param name="message">The message indicating why the activity invocation failed.</param>
            <param name="reschedulePeriod">When to reschedule the activity for.</param>
            <param name="ignoreAttempts">Whether the attempts should be ignored.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.Message">
            <summary>
            Gets the message indicating why the activity invocation failed.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.ReschedulePeriod">
            <summary>
            Gets when to reschedule the activity for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.Failure.IgnoreAttempts">
            <summary>
            Gets whether the attempts should be ignored.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessExitPlan">
            <summary>
            A result indicating the enrollment should exit the plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessExitPlan.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessMove">
            <summary>
            A result indicating the enrollment should transition to a new activity.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessMove.DefaultPathKey">
            <summary>
            The path key of the default path.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessMove.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessMove.#ctor(System.String)">
            <summary>
            Create a new instance.
            </summary>
            <param name="pathKey">The key of the path to take in the plan.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessMove.PathKey">
            <summary>
            Gets the key of the path to take in the plan.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessStay">
            <summary>
            A result indicating the enrollment should remain at the current activity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessStay.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessStay.#ctor(System.TimeSpan)">
            <summary>
            Create a new instance.
            </summary>
            <param name="timeout">The duration to wait before checking the activity again.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Activity.SuccessStay.Timeout">
            <summary>
            Gets the duration to wait before checking the activity again.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Cache.IConditionCache">
            <summary>
            Defines a cache used for parsed rules.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Cache.IConditionCache.Add(System.String,Sitecore.Framework.Rules.ICondition)">
            <Add>
      <summary>Adds a rule to the cache.</summary>
      <param name="ruleText">The rule text of the rule.</param>
      <param name="condition">The rule to add.</param>
    </Add>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Cache.IConditionCache.GetCondition(System.String)">
            <GetCondition>
      <summary>Get a rule from the cache.</summary>
      <param name="ruleText">The rule text of the rule to retrieve.</param>
      <returns>The rule if found, otherwise null.</returns>
    </GetCondition>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Cache.IConditionCache.Clear">
            <Clear>
      <summary>Clears all rules from the cache.</summary>
    </Clear>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Cache.IConditionCache.Remove(System.String)">
            <Remove>
      <summary>Removes a singel rule from the cache.</summary>
      <param name="ruleText">The rule text of the rule to remove.</param>
      <returns>True if the rule was found and removed, otherwise false.</returns>
    </Remove>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentAttemptsCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentAttemptsCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentAttemptsCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentAttemptsCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCustomValuesCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCustomValuesCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCustomValuesCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCustomValuesCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentFormaCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentFormaCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentFormaCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentFormaCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTimeoutCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTimeoutCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTimeoutCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTimeoutCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentUpdateCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentUpdateCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentUpdateCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentUpdateCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanEnrollmentFilterCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanEnrollmentFilterCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanEnrollmentFilterCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanEnrollmentFilterCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanStatisticsCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanStatisticsCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanStatisticsCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.PlanStatisticsCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTransitionCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTransitionCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTransitionCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentTransitionCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentKeyCollection">
            <summary>
            A collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentKeyCollection.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentKeyCollection.#ctor(System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="capacity">The number of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/>s the collection can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ActivityEnrollmentKeyCollection.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey})">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">A collection of the intial elements to store in the collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary">
            <summary>
            Represents a dictionary of custom values.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that is empty, has the default initial capacity, 
            and uses the default equality comparer for the key type.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that is empty, has the specified initial capacity, 
            and uses the default equality comparer for the key type.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> can contain.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that is empty, has the default initial capacity, 
            and uses the specified <see cref="T:IEqualityComparer{string}" />.
            </summary>
            <param name="comparer">The <see cref="T:IEqualityComparer{string}" /> implementation to use when comparing keys, 
            or null to use the default <see cref="T:EqualityComparer{string}" /> for the type of the key.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that is empty, has the specified initial capacity, 
            and uses the specified <see cref="T:IEqualityComparer{string}" />.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> can contain.</param>
            <param name="comparer">The <see cref="T:IEqualityComparer{string}" /> implementation to use when comparing keys, 
            or null to use the default <see cref="T:EqualityComparer{string}" /> for the type of the key.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that contains elements copied from the specified <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary" /> 
            and uses the default equality comparer for the key type.
            </summary>
            <param name="dictionary">The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary" /> whose elements are copied to the new <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" />.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" /> class that contains elements copied from the specified <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary" /> 
            and uses the specified <see cref="T:IEqualityComparer{string}" />.</summary>
            <param name="dictionary">The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary" /> whose elements are copied to the new <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" />.</param>
            <param name="comparer">The <see cref="T:IEqualityComparer{string}" /> implementation to use when comparing keys, 
            or null to use the default <see cref="T:EqualityComparer{string}" /> for the type of the key.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" />.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure containing the source and destination of the serialized stream associated with the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary" />.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.MergeWithOverwrite(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Merge the current dictionary with another, overwriting values in the current dictionary if they exist in the other dictionary.
            </summary>
            <param name="customValues">The dictionary to merge with.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary.AreEntriesEqual(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Determines if the entries of the dictionaries are equal.
            </summary>
            <param name="other">The other dictionary to compare against.</param>
            <returns>True if the entries are equal, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentAttemptsCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/>
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentCustomValuesCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentFormaCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentKeyCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/>
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentTimeoutCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentTransitionCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition"/>
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary">
            <summary>
            Defines a dictionary of custom values.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary.MergeWithOverwrite(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Merge the current dictionary with another, overwriting values in the current dictionary if they exist in the other dictionary.
            </summary>
            <param name="customValues">The dictionary to merge with.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary.AreEntriesEqual(Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Determines if the entries of the dictionaries are equal.
            </summary>
            <param name="other">The other dictionary to compare against.</param>
            <returns>True if the entries are equal, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IPlanEnrollmentFilterCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.IPlanStatisticsCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Configuration.IEngineConfigurator">
            <summary>
            Defines a type which configures an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine"/> instance.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Configuration.IEngineConfigurator.Configure(Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine)">
            <summary>
            Configure the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine"/> instance.
            </summary>
            <param name="engine">The engine to configure.</param>
            <returns>True if the operation was a success, or false if there was an issue.</returns> 
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter">
            <summary>
            Times how long a region of code takes to execute, and updates the specified average count performance counter
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter._counterKey">
            <summary>
            The counter key identifying the counter to update.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter._counters">
            <summary>
            The counters to update.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter._stopwatch">
            <summary>
            The stopwatch used to time the execution time.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter.#ctor(Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,System.Int16)">
            <summary>
            Create a new instance.
            </summary>
            <param name="counters">The counters to update.</param>
            <param name="counterKey">The counter key identifying the counter to update.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter.Dispose">
            <summary>
            Disposes the instance.
            </summary>
            <remarks>Stops the stopwatch and logs the elapsed time to the counter.</remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.ElapsedTimeCounter.Dispose(System.Boolean)">
            <summary>
            Disposes the instance.
            </summary>
            <param name="disposing">Inidicates whether managed resources shouyld be disposed.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter">
            <summary>
            Logs metrics to performance coutners.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter._averageTimeBaseKey">
            <summary>
            The key identifying the counter to update for base average calls.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter._counters">
            <summary>
            The counters to update.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter._countKey">
            <summary>
            The key identifying the counter to update for operation calls.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter._countPerSecKey">
            <summary>
            The key identifying the counter to update for operation calls per second.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter._batchCount">
            <summary>
            The number of items in a batch operation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter.#ctor(Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Create a new instance.
            </summary>
            <param name="counters">The counters to update.</param>
            <param name="countKey">The key of the 'count' performance counter.</param>
            <param name="countPerSecKey">The key of the 'count per second' performance counter.</param>
            <param name="averageTimeKey">The key of the 'average call duration' performance counter.</param>
            <param name="averageTimeBaseKey">The key of the 'average call duration base' performance counter.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter.#ctor(Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,System.Int16,System.Int16,System.Int16,System.Int16,System.Int32)">
            <summary>
            Create a new instance.
            </summary>
            <param name="counters">The counters to update.</param>
            <param name="countKey">The key of the 'count' performance counter.</param>
            <param name="countPerSecKey">The key of the 'count per second' performance counter.</param>
            <param name="averageTimeKey">The key of the 'average call duration' performance counter.</param>
            <param name="averageTimeBaseKey">The key of the 'average call duration base' performance counter.</param>
            <param name="batchCount">The number of items in a batch operation.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Diagnostics.OperationCounter.Dispose(System.Boolean)">
            <summary>
            Disposes the instance.
            </summary>
            <param name="disposing">Inidicates whether managed resources shouyld be disposed.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider">
            <summary>
            Defines a provider which handles enrollment information for activities and plans.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.GetEnrollmentsAsync(System.Guid)">
            <summary>
               Get the current enrollments for the contact.
            </summary>
            <param name="contactId"> The ID of the contact to get the enrollments for.</param>
            <returns>The current activity enrollments for the contact.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.GetEnrollmentsAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentKeyCollection)">
            <summary>
               Get the current enrollments for the provided enrollment keys.
            </summary>
            <param name="enrollmentKeys"> The keys for the enrollments to retrieve.</param>
            <returns>A list of the found enrollments.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.TransitionAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentTransitionCollection)">
            <summary>
                Moves the enrollment to a new activity.
            </summary>
            <param name="transitions"> The transitions to make.</param>
            <returns>A list of the updated enrollments.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.EnrollAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentFormaCollection)">
            <summary>
               Enrolls a contact into a plan, checking to ensure the contact is not already enrolled.
            </summary>
            <param name="enrollmentFormas"> The enrollments to enroll.</param>
            <returns>
               A collection of created enrollments.
            </returns>
            <remarks>
               Any enrollments which cannot be created will not be returned.
            </remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.RemoveAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IPlanEnrollmentFilterCollection)">
            <summary>
               Removes an enrollment from the data store.
            </summary>
            <param name="filters"> The filters to remove the enrollments for.</param>
            <returns>The list of<see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey" /> of the removed enrollments.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.StallAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentKeyCollection)">
            <summary>
               Stalls the contact at the specified enrollment, so they don't consume processing resources.
            </summary>
            <param name="enrollmentKeys"> The enrollments to stall.</param>
            <returns>The<see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey" /> s that where stalled.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.IncrementActivityAttemptsAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentKeyCollection)">
            <summary>
               Increments the attempt count for a list of enrollments.
            </summary>
            <param name="enrollmentKeys"> The enrollments to increment the attempt count for.</param>
            <returns>The attempt count after the increment.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.SetTimeoutAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentTimeoutCollection)">
            <summary>
               Sets the timeout for enrollments.
            </summary>            
            <param name="timeouts"> The timeouts to set.</param>
            <returns>A list of enrollment keys for the enrollments which where successfully updated.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.SetCustomValuesAsync(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentCustomValuesCollection)">
            <summary>
               Sets the custom values for enrollments.
            </summary>
            <param name="customValues"> The custom values to set.</param>
            <returns>A list of enrollment keys for the enrollments which where successfully updated.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.GetExpiredActivitiesAsync(System.DateTime)">
            <summary>
               Get the enrollments which have timed out.
            </summary>
            <param name="dateTime"> The timestamp to evaluate whether the activities have timed out.</param>
            <returns>The enrollments which have timed out.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.GetPlanStatisticsAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
               Gets the statistics for one or more plans.
            </summary>
            <param name="planDefinitionIds"> The list of plan IDs to retrieve the statistics for. If this list is empty, get the statistics for all plans.</param>
            <returns>A list of plan statistics.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider.GetPlanReportAsync(System.Guid,System.DateTime,System.DateTime)">
            <summary>
               Gets the report for the plan.
            </summary>
            <param name="planDefinitionId"> The ID of the plan to get the report for.</param>
            <param name="startDate"> The start date to filter the current counts from.</param>
            <param name="endDate"> The end date to filter the current counts to.</param>
            <returns>
               The plan report.If the plan can't be found, returns <c>null</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentOperations">
            <summary>
            Defines operations to be performed for enrollments.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentOperations.EnrollInPlan(System.Guid,System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Enroll a contact into the entry activity of a plan.
            </summary>
            <param name="contactId">The ID of the contact to enroll.</param>
            <param name="planDefinitionId">The ID of the plan definition to enroll the contact.</param>
            <param name="customValues">Custom values for the enrollment.</param>
            <returns>True if the enrollment request was registered successfully, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentOperations.EnrollInActivity(System.Guid,System.Guid,System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Enroll a contact into a specific activity of a plan.
            </summary>
            <param name="contactId">The ID of the contact to enroll.</param>
            <param name="planDefinitionId">The ID of the plan definition to enroll the contact.</param>
            <param name="activityId">The ID of the activity within the plan to enroll the contact.</param>
            <param name="customValues">Custom values for the enrollment.</param>
            <returns>True if the enrollment request was registered successfully, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues">
            <summary>
            Contains the custom values for a single enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="customValues">The custom values for the enrollment.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues.EnrollmentKey">
            <summary>
            Gets the key identifying the single enrollment.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues.CustomValues">
            <summary>
            Gets the custom values for the enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentCustomValues.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts">
            <summary>
            Contains the attempt count for a single enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.Int16)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="attempts">The current attempt count for the enrollment.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts.EnrollmentKey">
            <summary>
            Gets the key identifying the single enrollment.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts.Attempts">
            <summary>
            Gets the current attempt count for the enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentAttempts.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition">
            <summary>
            A single enrollment to be created.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition._targetActivityId">
            <summary>
            The ID of the activity to transition to.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Guid)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="targetActivityId">The ID of the activity to transition to.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.DateTime,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Guid)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="timeoutDate">The date when the current activity will time out and will be scheduled for processing.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="targetActivityId">The ID of the activity to transition to.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition.TargetActivityId">
            <summary>
            Gets or sets the ID of the activity to transition to.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTransition.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma">
            <summary>
            A single enrollment to be created.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Boolean)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="singlePlanEnrollment">Determines whether the contact with the context key can only enroll into the plan once at a time.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.DateTime,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Boolean)">
            <summary>
            Create a new instance.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="timeoutDate">The date when the current activity will time out and will be scheduled for processing.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="singlePlanEnrollment">Determines whether the contact with the context key can only enroll into the plan once at a time.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma.SinglePlanEnrollment">
            <summary>
            Gets or sets whether the contact with the context key can only enroll into the plan once at a time.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentForma.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout">
            <summary>
            A timeout for an enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout"/> class.
            </summary>
            <param name="enrollmentKey">The key identifying the enrollment.</param>
            <param name="timeout">The timeout to reschedule the activity after.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout.EnrollmentKey">
            <summary>
            The key identifying the enrollment.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout.Timeout">
            <summary>
            The timeout to reschedule the activity after.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter">
            <summary>
            A filter used to specify enrollments.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.#ctor(System.Guid)">
            <summary>
            Create a new instance.
            </summary>
            <param name="contactId">The ID of the contact to filter the enrollments for.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey)">
            <summary>
            Create a new instance.
            </summary>
            <param name="key">An enrollment key to derive the filter from.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.ContactId">
            <summary>
            Gets the ID of the contact to filter the enrollments for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.PlanDefinitionId">
            <summary>
            Gets or sets the ID of the plan to filter the enrollments for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.ContextKey">
            <summary>
            Gets or sets the context key to filter the enrollments for.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Enrollment.PlanEnrollmentFilter.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Extensions.ActivityEnrollmentKeyExtensions">
            <summary>
            Extension methods for working with <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Extensions.ActivityEnrollmentKeyExtensions.Transition(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.Guid)">
            <summary>
            Creates a new <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/> with the provided activity.
            </summary>
            <param name="key">The key to transition.</param>
            <param name="activityId">The ID of the actvity to use in the new key.</param>
            <returns>A new key with the activity updated.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IActivityFactory">
            <summary>
            Defines a factory which creates instances of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Activity.IActivity"/>
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Factory.IActivityFactory.CreateActivity(Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationActivityDefinition)">
            <CreateActivity>
      <summary>
        Create an activity instance from the provided <see cref="T:Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationActivityDefinition" /></summary>
      <param name="activityDefinition">The activity definition of the activity to create.</param>
      <returns>The created activity intance, or null if there was an issue.</returns>
    </CreateActivity>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IActivityResultHandlerFactory">
            <summary>
            Defines a factory which creates handlers for activity results.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Factory.IActivityResultHandlerFactory.CreateHandler(Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult)">
            <CreateHandler>
      <summary>
        Create a handler for the provided activity result.
      </summary>
      <param name="result">The result to create the handler for.</param>
      <returns>The created handler.</returns>
    </CreateHandler>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IContextKeyFactory">
            <summary>
            Defines a factory used to generate context keys used in enrollments.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Factory.IContextKeyFactory.GenerateKey(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData)">
            <summary>
            Generates the context key.
            </summary>
            <param name="contactId">The ID of the contact to generate the key for.</param>
            <param name="executionData">The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> to generate the key for.</param>
            <returns>The generated key.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IPoolWorkerFactory">
            <summary>
            Defines a type which can create instances of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Factory.IPoolWorkerFactory.Create">
            <Create>
      <summary>Create a new instance of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker" /> with default settings.</summary>
      <returns>A new <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker" /> instance.</returns>
    </Create>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IProcessorFactory">
            <summary>
            Defines a factory used to create <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Factory.IProcessorFactory.CreateProcessor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData)">
            <CreateProcessor>
            <summary>
                Creates an appropriate <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor" /> for the provided parameters.
            </summary>
            <param name="contactId">The ID of the contact the processor will be used for.</param>
            <param name="data">Additional data used to process with.</param>
            <returns>The processor to use to process the data.</returns>
        </CreateProcessor>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine">
            <summary>
            Defines the Automation Engine.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine.Configure">
            <Configure>
      <summary>Configures the engine.</summary>
      <returns>True if the operation was a success, or false if there was an issue.</returns>
    </Configure>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine.StartWorkers">
            <StartWorkers>
      <summary>Starts the engine which will start the workers.</summary>
      <returns>True if the operation was a success, or false if there was an issue.</returns>
    </StartWorkers>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine.StopWorkers">
            <StopWorkers>
      <summary>Stops the engine which will stop the workers.</summary>
      <returns>True if the operation was a success, or false if there was an issue.</returns>
    </StopWorkers>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine.AddPoolWorker(Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker)">
            <AddPoolWorker>
      <summary>Add a pool worker to the engine.</summary>
      <param name="worker">The pool worker to add to the engine.</param>
      <returns>True if the operation was a success, or false if there was an issue.</returns>
    </AddPoolWorker>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.IAutomationEngine.AddActivityTimeoutWorker(Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker)">
            <AddActivityTimeoutWorker>
      <summary>Add an activity timeout worker to the engine.</summary>
      <param name="worker">The activity timeout worker to add to the engine.</param>
      <returns>True if the operation was a success, or false if there was an issue.</returns>
    </AddActivityTimeoutWorker>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Loading.IContactExpandOptionsConfigurator">
            <summary>
            Defines a type which configures the <see cref="T:Sitecore.XConnect.ExpandOptions"/> used when loading a <see cref="T:Sitecore.XConnect.Contact"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Loading.IContactExpandOptionsConfigurator.Configure(Sitecore.XConnect.ContactExpandOptions,Sitecore.XConnect.IXdbContext)">
            <summary>Configures the <see cref="T:Sitecore.XConnect.ExpandOptions"/>.</summary>
            <param name="options">The <see cref="T:Sitecore.XConnect.ExpandOptions"/> to configure.</param>
            <param name="xdbContext">The <see cref="T:Sitecore.XConnect.IXdbContext"/> which provides access to XConnect.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Loading.IContactLoader">
            <summary>
            Defines a type which loads a <see cref="T:Sitecore.XConnect.Contact"/> from XConnect.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Loading.IContactLoader.LoadContact(System.Guid)">
            <summary>
            Loads a <see cref="T:Sitecore.XConnect.Contact"/> from XConnect.
            </summary>
            <param name="id">The ID of the <see cref="T:Sitecore.XConnect.Contact"/> to load. </param>
            <returns>The <see cref="T:Sitecore.XConnect.Contact"/> if found, otherwise <c>null.</c></returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Loading.IContactLoader.LoadContactAndInteraction(System.Guid,System.Guid)">
            <summary>
            Loads a <see cref="T:Sitecore.XConnect.Contact"/> and <see cref="T:Sitecore.XConnect.Interaction"/> from XConnect.
            </summary>
            <param name="contactId">The ID of the <see cref="T:Sitecore.XConnect.Contact"/> to load.</param>
            <param name="interactionId">The ID of the <see cref="T:Sitecore.XConnect.Interaction"/> to load.</param>
            <returns><see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult" />.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult">
            <summary>
            Represents the result of load contact and interaction batch operation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult.#ctor(Sitecore.XConnect.Contact,Sitecore.XConnect.Interaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult"/> class.
            </summary>
            <param name="contact">The contact that is returned by the load contact operation.</param>
            <param name="interaction">The interaction that is returned by the load interaction operation.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult.Contact">
            <summary>
            The contact that is returned by the load contact operation.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Loading.LoadContactAndInteractionResult.Interaction">
            <summary>
            The interaction that is returned by the load interaction operation.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Locator.IActivityTypeLocator">
            <summary>
            Defines a locator which locates activity types.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Locator.IActivityTypeLocator.GetActivityType(System.Guid)">
            <GetActivityType>
      <summary>Gets the type implementing an activity given by its type ID.</summary>
      <param name="typeId">The ID of the activity type to locate.</param>
      <returns>The .net type name of the type implementing the activity type.</returns>
    </GetActivityType>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Locator.IPlanLocator">
            <summary>
            Defines a locator which locates plans.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Locator.IPlanLocator.GetPlan(System.Guid)">
            <GetPlan>
            <summary>
                Gets a single plan.
            </summary>
            <param name="id">The ID of the plan to get.</param>
            <returns>
                The found plan. Returns <c>null</c> if the plan wasn't found.
            </returns>
        </GetPlan>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Locator.IPlanLocator.GetAllPlans">
            <GetAllPlans>
            <summary>
                Gets all plans.
            </summary>
            <returns>All plans available. Returns an empty enumeration if no plans are available.</returns>
        </GetAllPlans>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData">
            <summary>
            <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> for a single activity which must be processed.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData.#ctor(System.Guid,System.Nullable{System.Guid},Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Guid,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData"/> class.
            </summary>
            <param name="contactId">The ID of the contact to process the event with.</param>
            <param name="interactionId">The ID of the interaction to process the event with.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="planDefinitionId">The ID of the plan the activity belongs to.</param>
            <param name="activityId">The ID of the activity which requires processing.</param>
            <param name="contextKey">The context key used to identify this instance of the enrollment.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData.PlanDefinitionId">
            <summary>
            The ID of the plan the activity belongs to.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData.ActivityId">
            <summary>
            The ID of the activity which requires processing.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData.ContextKey">
            <summary>
            The context key used to identify this instance of the enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.ActivityData.GenerateActivityEnrollmentKey">
            <summary>
            Creates an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/> using data from this instance.
            </summary>
            <returns>A new instance of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/></returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.IWorkItemCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.WorkItemCollection">
            <summary>
            Represents a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.WorkItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.WorkItemCollection" /> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.WorkItemCollection.#ctor(System.Collections.Generic.IList{Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.WorkItemCollection"/> class.
            </summary>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.EnrollmentData">
            <summary>
            <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> for an enrollment request.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.EnrollmentData.#ctor(System.Guid,System.Nullable{System.Guid},Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.EnrollmentData"/> class.
            </summary>
            <param name="contactId">The ID of the contact to process the event with.</param>
            <param name="interactionId">The ID of the interaction to process the event with.</param>
            <param name="customValues">Custom values to process with.</param>
            <param name="planDefinitionId">The ID of the plan to enroll the contact in.</param>
            <param name="activityId">An optional ID of an activity to enroll the contact into.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.EnrollmentData.PlanDefinitionId">
            <summary>
            The ID of the plan to enroll the contact in.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.EnrollmentData.ActivityId">
            <summary>
            An optional ID of an activity to enroll the contact into.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.EventData">
            <summary>
            <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> for a contact event.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.EventData.#ctor(System.Guid,System.Nullable{System.Guid},Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.EventData"/> class.
            </summary>
            <param name="contactId">The ID of the contact to process the event with.</param>
            <param name="interactionId">The ID of the interaction to process the event with.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData">
            <summary>
            Additional data used to process a work item.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData" /> class.
            </summary>
            <param name="contactId">The ID of the contact to process.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.#ctor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData" /> class.
            </summary>
            <param name="contactId">The ID of the contact to process.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.#ctor(System.Guid,System.Nullable{System.Guid},Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData" /> class.
            </summary>
            <param name="contactId">The ID of the contact to process.</param>
            <param name="interactionId">The ID of the interaction to process the event with.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.ContactId">
            <summary>
            The ID of the contact to process the event with.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.InteractionId">
            <summary>
            The ID of the interaction to process the event with.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData.CustomValues">
            <summary>
            Custom values to process with.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool">
            <summary>
            Defines a pool for automation work items to be processed.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool.AddAsync(Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.IWorkItemCollection)">
            <summary>
            Add a batch of work items to the pool, asynchronously.
            </summary>
            <param name="workItems">The work items to add.</param>
            <returns>The results for each work item.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool.CheckoutAsync(System.Int16,System.Int16,System.Int16,System.Byte)">
            <summary>
            Checks out a batch of work item to the caller, asynchronously.
            </summary>
            <param name="head">The size of the top of the ordered work items to select the batch from.</param>
            <param name="size">The number of work items to check out in the batch.</param>
            <param name="timeout">The number of seconds to reschedule the work item into the future. After this timeout, the work item may be checked out to another caller.</param>
            <param name="minimumPriority">The minimum priority of work item to checkout.</param>
            <returns>The work items that where checked out.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool.SetTimeoutAsync(Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.IWorkItemCollection,System.Int16)">
            <summary>
            Reschedule a batch of work items to be processed some time in the future.
            </summary>
            <param name="workItems">The work items to reschedule.</param>
            <param name="timeout">The number of seconds to add to the current date for the schedule for all work items in the collection.</param>
            <returns>The results for each work item.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool.CheckInAsync(Sitecore.Xdb.MarketingAutomation.Core.Pool.Collections.IWorkItemCollection)">
            <summary>
            Checks in a batch of work items, indicating it has completed processing, asynchronously.
            </summary>
            <param name="workItems">The work items to check in.</param>
            <returns>The results for each work item.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool.PurgeContactsAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Remove work items for the provided contacts given by ID, asynchronously.
            </summary>
            <param name="contactsIds">The contact IDs to remove the work items for.</param>
            <returns>A task to report the status of the operation.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData">
            <summary>
            <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> for a live event.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData.#ctor(System.Guid,Sitecore.XConnect.Interaction,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData"/> class.
            </summary>
            <param name="contactId">The ID of the contact to process.</param>
            <param name="interaction">The interaction in which the live event was triggered.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData.Interaction">
            <summary>
            The interaction in which the live event was triggered.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode">
            <summary>
            Numeric status codes that indicate the outcome of an operation.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.Success">
            <summary>
            The operation was a success.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.GeneralFailure">
            <summary>
            General failure.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.WorkItemNotFound">
            <summary>
            Work item not found
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.TheEntryAlreadyExists">
            <summary>
            The entry already exists.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.AttemptMismatch">
            <summary>
            Attempt mismatch. The work item may have been checkout out again.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.EnrollmentNotFound">
            <summary>
            Enrollment not found.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.EnrollmentAlreadyExists">
            <summary>
            Enrollment already exists.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode.Unknown">
            <summary>
            Unknown status code.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCodesExtensions">
            <summary>
            Defines extension methods to <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCodesExtensions.IsSuccessful(Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode)">
            <summary>
            Determines whether <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode"/> represents a result of successful operation.
            </summary>
            <param name="statusCode">The status code to check.</param>
            <returns>
              <c>true</c> if <paramref name="statusCode"/> represents a result of successful operation.; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult">
            <summary>
            Contains the outcome of an operation for a batch of work items.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult"/> class.
            </summary>
            <param name="results">The results of all operations in the batch.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult" /> class with <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Success" /> set to <c>false</c> and empty <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Results" />.
            </summary>
            <param name="success">A value indicating whether the entire batch was successful.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Failure">
            <summary>
            Gets non-success, an empty <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Success">
            <summary>
            Gets a value indicating whether the entire batch was successful.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Results">
            <summary>
            Gets the results of all operations in the batch.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemBatchResult.Initialize(System.Collections.Generic.IEnumerable{Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult})">
            <summary>
            Initializes the batch result.
            </summary>
            <param name="results">The results of all operations in the batch.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult">
            <summary>
            Contains the outcome of an operation for a single work item.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult.#ctor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.StatusCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult"/> class.
            </summary>
            <param name="id">The ID of the work item the result is for.</param>
            <param name="statusCode">The status code for the outcome of the operation.</param>
            <param name="systemMessage">A system error message, if the error was system related and not raised from our stored proc code.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult.Id">
            <summary>
            The ID of the work item the result is for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult.Success">
            <summary>
            Indicates whether the operation was successful.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult.StatusCode">
            <summary>
            The status code for the outcome of the operation.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.Results.WorkItemResult.SystemMessage">
            <summary>
            A system error message, if the error was system related and not raised from our stored proc code.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem">
            <summary>
            An item which can be added to the automation pool for processing.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.LowPriority">
            <summary>
            The value for low priority.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.NormalPriority">
            <summary>
            The value for normal priority.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.HighPriority">
            <summary>
            The value for high priority.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.#ctor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem"/> class.
            </summary>
            <param name="contactId">The ID of the contact the work item is for.</param>
            <param name="executionData">The data for the work item.</param>
            <param name="priority">The priority of the work item.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.#ctor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData,System.Byte,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem"/> class.
            </summary>
            <param name="contactId">The ID of the contact the work item is for.</param>
            <param name="executionData">The data for the work item.</param>
            <param name="priority">The priority of the work item.</param>
            <param name="scheduled">The earliest time the work item may be processed.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.#ctor(System.Guid,System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData,System.Byte,System.DateTime,System.DateTime,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem"/> class.
            </summary>
            <param name="id">Uniquely identifies this work item.</param>
            <param name="contactId">The ID of the contact the work item is for.</param>
            <param name="executionData">The data for the work item.</param>
            <param name="priority">The priority of the work item.</param>
            <param name="scheduled">The earliest time the work item may be processed.</param>
            <param name="created">When the work item was created.</param>
            <param name="attempts">The number of times this work item has been checked out.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.Id">
            <summary>
            Uniquely identifies this work item
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.ContactId">
            <summary>
            The ID of the contact the work item is for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.ExecutionData">
            <summary>
            The data for the work item.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.Priority">
            <summary>
            The priority of the work item.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.Created">
            <summary>
            When the work item was created.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.Scheduled">
            <summary>
            The earliest time the work item may be processed.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Pool.WorkItem.Attempts">
            <summary>
            The number of times this work item has been checked out.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase">
            <summary>
            Base class for activity enrollment classes.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.DateTime,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase"/> class.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="timeoutDate">The date when the current activity will time out and will be scheduled for processing.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.EnrollmentKey">
            <summary>
            The key identifying the single enrollment.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.TimeoutDate">
            <summary>
            The date when the current activity will time out and will be scheduled for processing.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.CustomValues">
            <summary>
            Custom values to process with.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentBase.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment">
            <summary>
            A single enrollment for a contact
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.DateTime,System.DateTime,System.Int16,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> class.
            </summary>
            <param name="enrollmentKey">The key identifying the single enrollment.</param>
            <param name="entryDate">The date the contact entered the current activity.</param>
            <param name="timeoutDate">The date when the current activity will time out and will be scheduled for processing.</param>
            <param name="attempts">The number of times the activity has been attempted to be invoked.</param>
            <param name="customValues">Custom values to process with.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment.EntryDate">
            <summary>
            The date the contact entered the current activity.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment.Attempts">
            <summary>
            The number of times the activity has been attempted to be invoked.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey">
            <summary>
            Identifies a single activity enrollment for a contact.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.#ctor(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey"/> class.
            </summary>
            <param name="contactId">The ID of the contact enrolled in the activity.</param>
            <param name="planDefinitionId">The ID of the plan the activity is part of.</param>
            <param name="activityId">The ID of the activity the contact is enrolled in.</param>
            <param name="contextKey">The context key for this enrollment.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.ContactId">
            <summary>
            The ID of the contact enrolled in the activity.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.PlanDefinitionId">
            <summary>
            The ID of the plan the activity is part of.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.ActivityId">
            <summary>
            The ID of the activity the contact is enrolled in.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.ContextKey">
            <summary>
            The context key for this enrollment.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.Equals(System.Object)">
            <summary>
            Determines if two instance are the same value.
            </summary>
            <param name="obj">The other instance to test against.</param>
            <returns>True if the instances are the same value.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.GetHashCode">
            <summary>
            Generates a hash code based on the value of this instance.
            </summary>
            <returns>The generated hash code for this instance.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string representing the activity enrollment key.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate">
            <summary>
            An update for an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentUpdate.Enrollment">
            <summary>
            The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> which was updated.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.AddedActivityEnrollment">
            <summary>
            Represents an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> which was added.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.AddedActivityEnrollment.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment)">
            <summary>
             Create a new instance.
            </summary>
            <param name="enrollment">The enrollment which was added.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IContextKeyGenerator">
            <summary>
            Defines a type which can generate enrollment context keys using a context key factory.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IContextKeyGenerator.GenerateKey(System.String,System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData)">
            <summary>
            Generates the enrollment context key using the provided factory type.
            </summary>
            <param name="factoryType">The type of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IContextKeyFactory"/> to use during geenration.</param>
            <param name="contactId">The ID of the contact the key is being generated for.</param>
            <param name="executionData">The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData"/> the key is being generated for.</param>
            <returns>The generated key, or an empty string if something went wrong.</returns>
            <remarks>
            The type given in the factoryType parameter must implement the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Factory.IContextKeyFactory"/> interface.
            </remarks>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker">
            <summary>
            Defines a worker which processes the work pool.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker.MinimumPriority">
            <MinimumPriority>
      <summary>Gets the minimum priority work this worker will process.</summary>
    </MinimumPriority>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IPoolWorker.AutomationPool">
            <AutomationPool>
      <summary>Gets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.IAutomationPool" /> to process work from.</summary>
    </AutomationPool>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor">
            <summary>
            Defines a contact processor used to process work item data.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor.ContactId">
            <summary>
            The ID of the contact the event is for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor.ExecutionData">
            <summary>
            Additional data to execute with.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor.Process">
            <summary>
            Process the processor.
            </summary>
            <returns><see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult"/> that indicates whether the processor completed successfully or not.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessorRunner">
            <summary>
            Defines a runner which runs a processor.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessorRunner.AutomationPool">
            <AutomationPool>
            <summary>
             The pool to reschedule work in if the process fails.
            </summary>
        </AutomationPool>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessorRunner.Run(Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor,System.Byte)">
            <Run>
            <summary>
                Run the processor and handle it's outcome.
            </summary>
            <param name="processor">The processor to run.</param>
            <param name="reschedulePriority">The priority to reschedule activities in new work items.</param>
            <returns>The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" /> of the processor which was run.</returns>
        </Run>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker">
            <summary>
            Defines a worker, which is a background task which performs work.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker.Id">
            <Id>
      <summary>Gets the ID used to identify this worker instance.</summary>
    </Id>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker.IsRunning">
            <IsRunning>
      <summary>Gets a value indicating whether this worker is currently running; if it has been started.</summary>
    </IsRunning>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker.StartWorker">
            <StartWorker>
      <summary>Starts the worker.</summary>
      <returns>True if the worker started properly, otherwise false.</returns>
    </StartWorker>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker.StopWorker">
            <StopWorker>
      <summary>Stops the worker.</summary>
      <returns>True if the worker stopped properly, otherwise false.</returns>
    </StopWorker>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker.LogDetails">
            <LogDetails>
      <summary>Logs details about the worker to the log.</summary>
    </LogDetails>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorkerOptions">
            <summary>
            Defines common options for workers.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorkerOptions.Schedule">
            <summary>
            The <see cref="T:System.TimeSpan"/> the worker will sleep when no work is available.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.NullProcessorRunner">
            <summary>
            An implementation of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessorRunner"/> which does nothing.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.NullProcessorRunner.AutomationPool">
            <AutomationPool>
            <summary>
             The pool to reschedule work in if the process fails.
            </summary>
        </AutomationPool>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.NullProcessorRunner.Run(Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor,System.Byte)">
            <Run>
            <summary>
                Run the processor and handle it's outcome.
            </summary>
            <param name="processor">The processor to run.</param>
            <param name="reschedulePriority">The priority to reschedule activities in new work items.</param>
            <returns>The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" /> of the processor which was run.</returns>
        </Run>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext">
            <summary>
            Contains data required to invoke an activity within a plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.#ctor(System.Guid,Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationPlanDefinition,System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.ExecutionData,Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext"/> class.
            </summary>
            <param name="contactId">The ID of the contact the activity is being invoked for.</param>
            <param name="plan">The plan where the activity is defined.</param>
            <param name="startActivityId">The ID of the activity to start the invocation from.</param>
            <param name="executionData">The data to invoke with.</param>
            <param name="activityEnrollment">The enrollment at the start of the pulse.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.ContactId">
            <summary>
            The ID of the contact the activity is being invoked for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.Plan">
            <summary>
            The plan where the activity is defined.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.StartActivityId">
            <summary>
            The ID of the activity to start the invocation from.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.ExecutionData">
            <summary>
            The data to invoke with.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext.ActivityEnrollment">
            <summary>
            The enrollment at the start of the pulse.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler">
            <summary>
            A base class for <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler"/> implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler"/> class.
            </summary>
            <param name="logger">The logger to log messages to.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.AutomationPlanDefinition">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.ExistingActivityEnrollment">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.UpdatedActivityEnrollment">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.HandleResult(Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult,Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.CreateProcessingResult">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.Logger">
            <summary>
            The logger to log messages to.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.GetActivityFromPlan(System.Guid)">
            <summary>
            Gets the activity from <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.AutomationPlanDefinition"/>.
            </summary>
            <param name="activityId">The ID of the activity to get from the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityResultBaseHandler.AutomationPlanDefinition"/>.</param>
            <returns><see cref="T:Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationActivityDefinition"/> if found; otherwise, error message is logged and <c>null</c> is returned.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler">
            <summary>
            Defines a type which handles the result of an activity invocation.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler.AutomationPlanDefinition">
            <summary>
            Gets or sets the <see cref="T:Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationPlanDefinition"/> defining the plan being processed.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler.ExistingActivityEnrollment">
            <summary>
            Gets or sets the existing <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> if one exists.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler.UpdatedActivityEnrollment">
            <summary>
            Gets or sets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> which was updated during the handling of the result.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler.HandleResult(Sitecore.Xdb.MarketingAutomation.Core.Activity.ActivityResult,Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary)">
            <summary>
            Handles the result.
            </summary>
            <param name="result">The result to handle.</param>
            <param name="enrollmentKey">The key of the enrollment which was processed.</param>
            <param name="customValues">The custom values that the activity was invoked with.</param>
            <returns>True if the driver should continue, or false if the driver should break and return the result.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IActivityResultHandler.CreateProcessingResult">
            <summary>
            Create a processing result for this activity result.
            </summary>
            <returns>A processing result instructing the worker on how to handle</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanDriver">
            <summary>
            Defines an engine which progresses contacts through activities within a plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanDriver.Pulse(Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext)">
            <summary>
            Start processing from an activity within the plan.
            </summary>
            <param name="context">The data to process with.</param>
            <returns>The outcome of the final activity in the chain of invocations, that didn't move the contact within the plan.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanDriver.Pulse(Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ActivityInvocationContext,Sitecore.XConnect.Contact,Sitecore.XConnect.Interaction)">
            <summary>
              Start processing from an activity within the plan.
            </summary>
            <param name="context">The data to process with.</param>
            <param name="contact">The contact to process with.</param>
            <param name="interaction">The interaction to process with.</param>
            <returns>The outcome of the final activity in the chain of invocations, that didn't move the contact within the plan.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanPulseRegulator">
            <summary>
            Defines a type which regulates how plan pulses may be processed.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanPulseRegulator.Message">
            <Message>
      <summary>Gets a message describing the previous result.</summary>
    </Message>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanPulseRegulator.Reset">
            <Reset>
      <summary>Resets the regulator for a new pulse.</summary>
    </Reset>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanPulseRegulator.CanProceed(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollmentKey,System.Guid)">
            <CanProceed>
      <summary>Determines if the processing may proceed.</summary>
      <param name="key">The key of the enrollment being processed.</param>
      <param name="activityId">The activity being processed for the enrollment.</param>
      <returns>True if the invocation can proceed.</returns>
      <remarks>The reasoning for the result is stored in the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IPlanPulseRegulator.Message" /> property.</remarks>
    </CanProceed>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext">
            <summary>
            The default <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext"/> implementation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.CustomValues">
            <summary>
            Gets or sets the custom values to use within the context.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.Contact">
            <Contact>
      <summary>Gets the contact being processed.</summary>
      <returns>The contact, if they exist, otherwise null.</returns>
    </Contact>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.Interaction">
            <Interaction>
      <summary>Gets the interaction being processed.</summary>
      <returns>The interaction being processed.</returns>
    </Interaction>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.ActivityEnrollment">
            <ActivityEnrollment>
      <summary>Gets the enrollment being processed for this activity.</summary>
      <returns>The current enrollment, or null if there is no enrollment.</returns>
    </ActivityEnrollment>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.GetCustomValue(System.String)">
            <GetCustomValue>
      <summary>Gets a custom value for the processing context.</summary>
      <param name="name">The name of the custom value to get.</param>
      <returns>The custom value, or null if the value doesn't exist.</returns>
    </GetCustomValue>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.ContactProcessingContext.SetCustomValue(System.String,System.String)">
            <SetCustomValue>
      <summary>Sets a custom value for the processing context.</summary>
      <param name="name">The name of the custom value to set.</param>
      <param name="value">The custom value to set.</param>
    </SetCustomValue>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext">
            <summary>
            Defines the context in which contact processing is done, and provides access to contextual data.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext.Contact">
            <Contact>
      <summary>Gets the contact being processed.</summary>
      <returns>The contact, if they exist, otherwise null.</returns>
    </Contact>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext.Interaction">
            <Interaction>
      <summary>Gets the interaction being processed.</summary>
      <returns>The interaction being processed.</returns>
    </Interaction>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext.ActivityEnrollment">
            <ActivityEnrollment>
      <summary>Gets the enrollment being processed for this activity.</summary>
      <returns>The current enrollment, or null if there is no enrollment.</returns>
    </ActivityEnrollment>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext.GetCustomValue(System.String)">
            <GetCustomValue>
      <summary>Gets a custom value for the processing context.</summary>
      <param name="name">The name of the custom value to get.</param>
      <returns>The custom value, or null if the value doesn't exist.</returns>
    </GetCustomValue>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext.SetCustomValue(System.String,System.String)">
            <SetCustomValue>
      <summary>Sets a custom value for the processing context.</summary>
      <param name="name">The name of the custom value to set.</param>
      <param name="value">The custom value to set.</param>
    </SetCustomValue>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1">
            <summary>
            A base class for any implementations of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IProcessor"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Locator.IPlanLocator,Sitecore.Xdb.MarketingAutomation.Core.Enrollment.IActivityEnrollmentProvider,Microsoft.Extensions.Logging.ILogger{`0},Sitecore.Xdb.MarketingAutomation.Core.Processing.IContextKeyGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1" /> class.
            </summary>
            <param name="planLocator">The plan locator used to locate plans.</param>
            <param name="activityEnrollmentProvider">The provider to access activity enrollment data through.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>
            <param name="contextKeyGenerator">The <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IContextKeyGenerator"/> used to generate context keys.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.PlanLocator">
            <summary>
                The plan locator used to locate plans.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.ActivityEnrollmentProvider">
            <summary>
            The provider to access activity enrollment data through.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.Logger">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.ContextKeyGenerator">
            <summary>
            Gets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IContextKeyGenerator"/> used to generate context keys.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.ContactId">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.ExecutionData">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.Process">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.GetPlanDefinition(System.Guid)">
            <summary>
            Gets the plan definition by ID.
            </summary>
            <param name="planDefinitionId">The ID of the plan definition to get by.</param>
            <returns>Found plan definition. Returns <c>null</c> if the plan definition is not found or an error occurred.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Processor`1.GenerateContextKey(Sitecore.Marketing.Definitions.AutomationPlans.Model.IAutomationPlanDefinition)">
            <summary>
            Generates the context key to enter a plan.
            </summary>
            <param name="planDefinition">The plan definition to create the context key for.</param>
            <returns>The generated context key.</returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.RemovedActivityEnrollment">
            <summary>
            Represents an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> which was removed.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.RemovedActivityEnrollment.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment)">
            <summary>
             Create a new instance.
            </summary>
            <param name="enrollment">The enrollment which was removed.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure">
            <summary>
            Indicates the operation failed.
            </summary>
            <seealso cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure"/> class.
            </summary>
            <param name="message">A message containing information about the failure.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure.#ctor(System.String,Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure"/> class.
            </summary>
            <param name="message">A message containing information about the failure.</param>
            <param name="updatedEnrollments">The enrollments which were updated.</param>
            <remarks>
                This constructor should only be used to aggregate multiple results.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Failure.Message">
            <summary>
            A message containing information about the failure.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.IProcessingResultAggregator">
            <summary>
            Defines a type which aggregates <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult"/> into a single <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.IProcessingResultAggregator.AggregateResults(System.Collections.Generic.IList{Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult})">
            <AggregateResults>
      <summary>Aggregates a list of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" /> into a single result.</summary>
      <param name="results">The results to aggregate</param>
      <returns>The aggregate result.</returns>
    </AggregateResults>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult">
            <summary>
            Defines a result from contact processing operation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult.#ctor(System.Boolean,Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult"/> class.
            </summary>
            <param name="success">Indicates whether the result is successful or not.</param>
            <param name="updatedEnrollments">The enrollments which were updated.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult.Success">
            <summary>
            Indicates whether the result is successful or not.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult.UpdatedEnrollments">
            <summary>
            The enrollments which were updated.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule">
            <summary>
            Indicates a collection of activities should be rescheduled in new work items.
            </summary>
            <seealso cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule.#ctor(System.Collections.Generic.IReadOnlyCollection{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule"/> class.
            </summary>
            <param name="activities">The activities to be rescheduled.</param>
            <remarks>
                This is a successful result, as the current work item has been completed successfully, and the outcome is to create a new work item for the future.
            </remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule.#ctor(System.Collections.Generic.IReadOnlyCollection{Sitecore.Xdb.MarketingAutomation.Core.Enrollment.ActivityEnrollmentTimeout},Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule"/> class.
            </summary>
            <param name="activities">The activities to be rescheduled.</param>
            <param name="updatedEnrollments">The enrollments which were updated.</param>
            <remarks>
                This constructor should only be used to aggregate multiple results.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Reschedule.Activities">
            <summary>
            The activities to be rescheduled.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Success">
            <summary>
            Indicates the operation was a success.
            </summary>
            <seealso cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.ProcessingResult" />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Success.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Success"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Success.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Results.Success" /> class.
            </summary>
            <param name="updatedEnrollments">The enrollments which were updated.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.TransitionedActivityEnrollment">
            <summary>
            Represents an <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> which transitioned from one activity to another.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.TransitionedActivityEnrollment.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment,Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment)">
            <summary>
             Create a new instance.
            </summary>
            <param name="enrollment">The enrollment which was removed.</param>
            <param name="previousEnrollment">The enrollment which was transitioned to the new enrollment.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.TransitionedActivityEnrollment.PreviousEnrollment">
            <summary>
            Gets the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.ActivityEnrollment"/> before the transition occured.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1">
            <summary>
            A base class for all <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorker"/> classes.
            </summary>
            <typeparam name="TLogger">The type of the logger to use.</typeparam>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.DefaultSleepIntervalMilliseconds">
            <summary>
            The default sleep interval used to check the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.IsStopping"/> property while sleeping.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.ThreadCreationLock">
            <summary>
            Lock object for creating the worker thread.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{`0})">
            <summary>
            Create a new instance.
            </summary>
            <param name="configuration">Configuration to read the options from.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Processing.IWorkerOptions,Microsoft.Extensions.Logging.ILogger{`0})">
            <summary>
            Create a new instance.
            </summary>
            <param name="options">Options for the worker.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.#ctor(System.TimeSpan,Microsoft.Extensions.Logging.ILogger{`0})">
            <summary>
            Create a new instance.
            </summary>
            <param name="schedule">The <see cref="T:System.TimeSpan"/> the worker will sleep when no work is available.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>
        </member>
        <member name="E:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.ProcessingCompleted">
            <summary>
            An event which is raised when a single processing invocation has completed.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.WorkThread">
            <summary>
            The <see cref="T:System.Threading.Thread"/> used to execute the work.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.IsStopping">
            <summary>
            Gets or sets a value indicating whether the worker is stopping.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.Schedule">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> the worker will sleep when no work is available.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.Id">
            <Id>
      <summary>Gets the ID used to identify this worker instance.</summary>
    </Id>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.IsRunning">
            <IsRunning>
      <summary>Gets a value indicating whether this worker is currently running; if it has been started.</summary>
    </IsRunning>
            <remarks>
                This property is set from the worker thread, so may not be updated at the completion of the Start and Stop calls.
            </remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.StartWorker">
            <StartWorker>
      <summary>Starts the worker.</summary>
      <returns>True if the worker started properly, otherwise false.</returns>
    </StartWorker>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.StopWorker">
            <StopWorker>
      <summary>Stops the worker.</summary>
      <returns>True if the worker stopped properly, otherwise false.</returns>
    </StopWorker>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.LogDetails">
            <LogDetails>
      <summary>Logs details about the worker to the log.</summary>
    </LogDetails>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.Process">
            <summary>
            Called to execute the work this worker will do.
            </summary>
            <remarks>
                Long running processes should periodically check the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.IsStopping"/> property to see if a call to Stop has been made,
                and finish processing at a stable point.
            </remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Processing.Worker`1.StartProcess">
            <summary>
            The entry point for the work thread.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Processing.WorkerOptions">
            <summary>
            Common options for workers.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Processing.WorkerOptions.Schedule">
            <summary>
            The <see cref="T:System.TimeSpan"/> the worker will sleep when no work is available.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.IPlanStatisticsCollection">
            <summary>
            Defines a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection">
            <summary>
            Represents a collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection" /> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection" /> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.IPlanStatisticsCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.Collections.PlanStatisticsCollection" /> class that contains elements copied from the specified collection 
            and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport">
            <summary>
            Holds the reporting information for a single plan.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport._planAllContactCount">
            <summary>
            The sum of all contacts from the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityAllContactCount"/> property.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport._planCurrentContactCount">
            <summary>
            The sum of all contacts from the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityCurrentContactCount"/> property.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.#ctor(System.Guid,System.Collections.Generic.IReadOnlyDictionary{System.Guid,System.Int64},System.Collections.Generic.IReadOnlyDictionary{System.Guid,System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport"/> class.
            </summary>
            <param name="planDefinitionId">The ID of the plan.</param>
            <param name="activityCurrentContactCount">The current enrollment counts for all activities in the plan.</param>
            <param name="activityAllContactCount">The activity contact counts for all activities in the plan that are no longer enrolled.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.PlanDefinitionId">
            <summary>
            The ID of the plan.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityCurrentContactCount">
            <summary>
            The current enrollment counts for all activities in the plan.
            </summary>
            <remarks>
            The key of the dictionary is the ID of the activity.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityAllContactCount">
            <summary>
            The activity contact counts for all activities in the plan that are no longer enrolled.
            </summary>
            <remarks>
            The key of the dictionary is the ID of the activity.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.PlanCurrentContactCount">
            <summary>
            Provides the sum of all contacts from the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityCurrentContactCount"/> property.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.PlanAllContactCount">
            <summary>
            Provides the sum of all contacts from the <see cref="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanReport.ActivityAllContactCount"/> property.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics">
            <summary>
            Holds the reporting statistics of a single plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics.#ctor(System.Guid,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics"/> class.
            </summary>
            <param name="planDefinitionId">The ID of the plan.</param>
            <param name="currentEnrollmentCount">The current enrollment count.</param>
            <param name="allEnrollmentCount">The enrollment count since the plan was deployed.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics.PlanDefinitionId">
            <summary>
            The ID of the plan.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics.CurrentEnrollmentCount">
            <summary>
            The current enrollment count.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Reporting.PlanStatistics.AllEnrollmentCount">
            <summary>
            The enrollment count since the plan was deployed.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest">
            <summary>
            A single request to log a work item to enroll a contact into a plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest"/> class.
            </summary>
            <param name="contactId">The ID of the contact to enroll.</param>
            <param name="planDefinitionId">The ID of the plan to enroll in.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest.PlanDefinitionId">
            <summary>
            The ID of the plan to enroll the contact in.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest.ActivityId">
            <summary>
            The optional ID of an activity within the plan to enroll the contact in.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest.CustomValues">
            <summary>
            Custom values to include with the enrollment.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest">
            <summary>
            A request to log a work item for a live event.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest.#ctor(System.Guid,Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest"/> class.
            </summary>
            <param name="contactId">The ID of the contact the live event was triggered by.</param>
            <param name="eventData">The event data for the live event.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest.EventData">
            <summary>
            The event data for the live event.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.OperationsRequest">
            <summary>
            A base class for all operation request classes.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Requests.OperationsRequest.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.OperationsRequest"/> class.
            </summary>
            <param name="contactId">The ID of the contact the operation request is for.</param>
            <remarks>
            Sets the priority to low (50).
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.OperationsRequest.ContactId">
            <summary>
            The ID of the contact the operation request is for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.OperationsRequest.Priority">
            <summary>
            The priority to set on the resulting work item.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest">
            <summary>
            A request to purge a contact from the engine.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest"/> class.
            </summary>
            <param name="contactId">The ID of the contact to purge.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest">
            <summary>
            A request to purge a contact from a single plan.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest"/> class.
            </summary>
            <param name="contactId">The ID of the contact the operation request is for.</param>
            <param name="planDefinitionId">The ID of a single plan to purge the contact from.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest.PlanDefinitionId">
            <summary>
            The ID of a single plan to purge the contact from.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ConditionDeserializeError">
            <summary>
              Looks up a localized string similar to Failed to deserialize condition from rule text..
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ConditionJsonParseError">
            <summary>
              Looks up a localized string similar to Failed to parse condition from JSON..
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ErrorGettingActivityFromPlan">
            <summary>
              Looks up a localized string similar to An error occurred while getting activity &apos;{0}&apos; from plan &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.FailedToGetAutomationPlanDefinition">
            <summary>
              Looks up a localized string similar to Failed to get plan definition &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.FailureWhileGeneratingContextKey">
            <summary>
              Looks up a localized string similar to A failure occurred while generating an enrollment context key.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ProcessingExceptionOccurred">
            <summary>
              Looks up a localized string similar to An exception occurred during processing for worker &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.ServiceIsNotRegisteredError">
            <summary>
              Looks up a localized string similar to The service &apos;{0}&apos; is not registered..
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.StartingWorker">
            <summary>
              Looks up a localized string similar to Starting worker with ID &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Resources.StoppingWorker">
            <summary>
              Looks up a localized string similar to Stopping worker with ID &apos;{0}&apos;.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchEnrollmentRequestResult">
            <summary>
            Holds the collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.EnrollmentRequestResult"/> for a batch of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchEnrollmentRequestResult.#ctor(System.Boolean,System.Collections.Generic.ICollection{Sitecore.Xdb.MarketingAutomation.Core.Results.EnrollmentRequestResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchEnrollmentRequestResult"/> class.
            </summary>
            <param name="success">Indicates whether the entire batch was successful or not.</param>
            <param name="results">The results for the batch.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchLiveEventRequestResult">
            <summary>
            Holds the collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult"/> for a batch of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchLiveEventRequestResult.#ctor(System.Boolean,System.Collections.Generic.ICollection{Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchLiveEventRequestResult"/> class.
            </summary>
            <param name="success">Indicates whether the entire batch was successful or not.</param>
            <param name="results">The results for the batch.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromAllPlansRequestResult">
            <summary>
            Holds the collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromAllPlansRequestResult"/> for a batch of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromAllPlansRequestResult.#ctor(System.Boolean,System.Collections.Generic.ICollection{Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromAllPlansRequestResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromAllPlansRequestResult"/> class.
            </summary>
            <param name="success">Indicates whether the entire batch was successful or not.</param>
            <param name="results">The results for the batch.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromPlanRequestResult">
            <summary>
            Holds the collection of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromPlanRequestResult"/> for a batch of <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromPlanRequestResult.#ctor(System.Boolean,System.Collections.Generic.ICollection{Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromPlanRequestResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchPurgeFromPlanRequestResult"/> class.
            </summary>
            <param name="success">Indicates whether the entire batch was successful or not.</param>
            <param name="results">The results for the batch.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchRequestResult`2">
            <summary>
            Holds the results for a batch of requests.
            </summary>
            <typeparam name="TRequestResult">The type of the request result.</typeparam>
            <typeparam name="TRequest">The type of the original request.</typeparam>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchRequestResult`2.#ctor(System.Boolean,System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchRequestResult`2"/> class.
            </summary>
            <param name="success">Indicates whether the entire batch was successful or not.</param>
            <param name="results">The results for the batch.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchRequestResult`2.Success">
            <summary>
            Indicates whether the entire batch was successful or not.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.BatchRequestResult`2.Results">
            <summary>
            The results for the batch.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.EnrollmentRequestResult">
            <summary>
            Contains the results of a <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.EnrollmentRequestResult.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Requests.EnrollmentRequest,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.EnrollmentRequestResult"/> class.
            </summary>
            <param name="request">The request this result is for.</param>
            <param name="success">Indicates whether the result was successful or not.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult">
            <summary>
            Contains the results of a <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Requests.LiveEventRequest,System.Boolean,Sitecore.Xdb.MarketingAutomation.Core.Collections.IActivityEnrollmentUpdateCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult"/> class.
            </summary>
            <param name="request">The request this result is for.</param>
            <param name="success">Indicates whether the result was successful or not.</param>
            <param name="updatedEnrollments">The enrollment updates that were made.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.LiveEventRequestResult.UpdatedEnrollments">
            <summary>
            The updated enrollments.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromAllPlansRequestResult">
            <summary>
            Contains the results of a <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromAllPlansRequestResult.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromAllPlansRequest,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromAllPlansRequestResult"/> class.
            </summary>
            <param name="request">The request this result is for.</param>
            <param name="success">Indicates whether the result was successful or not.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromPlanRequestResult">
            <summary>
            Contains the results of a <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromPlanRequestResult.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Requests.PurgeFromPlanRequest,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.PurgeFromPlanRequestResult"/> class.
            </summary>
            <param name="request">The request this result is for.</param>
            <param name="success">Indicates whether the result was successful or not.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.RequestResult`1">
            <summary>
            Contains the results of an operation request.
            </summary>
            <typeparam name="TRequest">The type of the original request.</typeparam>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.RequestResult`1.#ctor(`0,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Results.RequestResult`1"/> class.
            </summary>
            <param name="request">The request this result is for.</param>
            <param name="success">Indicates whether the result was successful or not.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.RequestResult`1.Request">
            <summary>
            The request this result is for.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.RequestResult`1.Success">
            <summary>
            Indicates whether the result was successful or not.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Results.ValidationResult">
            <summary>
            Holds the result of a validation operation.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.ValidationResult.#ctor(System.Boolean)">
            <summary>
            Create a new instance.
            </summary>
            <param name="success">Whether the validation was successful or not.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Results.ValidationResult.#ctor(System.Boolean,System.String)">
            <summary>
            Create a new instance.
            </summary>
            <param name="success">Whether the validation was successful or not.</param>
            <param name="message">Information about the validation result.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.ValidationResult.Success">
            <summary>
            Indicates whether the validation was successful or not.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Results.ValidationResult.Message">
            <summary>
            Information about the validation result.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices">
            <summary>
            Provides access to the default set of services for conditions.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,Sitecore.Marketing.Definitions.DefinitionManagerFactory,Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider,Sitecore.Xdb.ReferenceData.Service.IReferenceDataService)">
            <summary>
            Create a new instance.
            </summary>
            <param name="collection">The <see cref="T:Sitecore.XConnect.IReadOnlyXdbContext"/> which provides read-only access to XConnect.</param>
            <param name="definitions">The <see cref="T:Sitecore.Marketing.Definitions.DefinitionManagerFactory"/> which provides access to the Marketing Operations API Definition Managers.</param>
            <param name="taxonomies">The <see cref="T:Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider"/> which provides access to the Marketing Operations API Taxonomy Manager Provider.</param>
            <param name="reference">The <see cref="T:Sitecore.Xdb.ReferenceData.Service.IReferenceDataService"/> which provides access to the Reference Data Service.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices.Collection">
            <Collection>
      <summary>
        Gets the <see cref="T:Sitecore.XConnect.IReadOnlyXdbContext" /> which provides read-only access to XConnect.
      </summary>
    </Collection>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices.Definitions">
            <Definitions>
      <summary>
        Gets the <see cref="T:Sitecore.Marketing.Definitions.DefinitionManagerFactory" /> which provides access to the Marketing Operations API Definition Managers.
      </summary>
    </Definitions>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices.Taxonomies">
            <Taxonomies>
      <summary>
        Gets the <see cref="T:Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider" /> which provides access to the Marketing Operations API Taxonomy Manager Provider.
      </summary>
    </Taxonomies>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.ConditionServices.Reference">
            <Reference>
      <summary>
        Gets the <see cref="T:Sitecore.Xdb.ReferenceData.Service.IReferenceDataService" /> which provides access to the Reference Data Service.
      </summary>
    </Reference>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata">
            <summary>
            Allows registration of an entity metadata with its ID, for the Threepwood rules engine.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata._type">
            <summary>
            The implementation type of the entity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata"/> class.
            </summary>
            <param name="id">The id of the entity.</param>
            <param name="implementationType">The implementation type of the entity.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata"/> class.
            </summary>
            <param name="configuration">The configuration to read options from.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.#ctor(Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadataOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata"/> class.
            </summary>
            <param name="options">The options to set the properties from.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.Id">
            <summary>
            The id of the entity.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.Type">
            <summary>
            The implementation type of the entity.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.BindPropertiesFromOptions(Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadataOptions)">
            <summary>
            Bind property values from options.
            </summary>
            <param name="options">The options to set the properties from.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata.SetTypeName(System.String)">
            <summary>
            Configures the lazy loader for type resolution.
            </summary>
            <param name="typeName">The type name to resolve.</param>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadataOptions">
            <summary>
            Options for the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadata"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadataOptions.Id">
            <summary>
            The id of the entity.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.EntityMetadataOptions.TypeName">
            <summary>
            The implementation type of the entity.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService">
            <summary>
            Defines a service which validates and evaluates the conditions of a rule.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService.Run(System.String,Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext)">
            <summary>Evaluate the conditions given in the ruleText, using the provided processingContext.</summary>
            <param name="ruleText"> A textual description of the condition to be evaluated.</param>
            <param name="processingContext"> The <see cref= "T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext" /> to use during evaluation.</param>
            <returns>The outcome of the condition evaluation.</returns>
            <remarks>The ruleText must be parseable by the rules engine in use.</remarks>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService.Run(Sitecore.Framework.Rules.ICondition,Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext)">
            <summary>Evaluate the condition using the provided processingContext.</summary>
            <param name="condition"> The condition to be evaluated.</param>
            <param name="processingContext">The <see cref= "T:Sitecore.Xdb.MarketingAutomation.Core.Processing.Plan.IContactProcessingContext" /> to use during evaluation.</param>
            <returns>The outcome of the condition evaluation.</returns>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionEvaluationService.Validate(System.String)">
            <summary>Validate the description of a condition to ensure it can be run.</summary>
            <param name="ruleText"> A textual description of the condition to be validated.</param>
            <returns>The outcome of the validation.</returns>
            <remarks>The ruleText must be parseable by the rules engine in use.</remarks>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionServices">
            <summary>
            Defines the default set of services made available to conditions.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionServices.Collection">
            <Collection>
      <summary>
        Gets the <see cref="T:Sitecore.XConnect.IReadOnlyXdbContext" /> which provides read-only access to XConnect.
      </summary>
    </Collection>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionServices.Definitions">
            <Definitions>
      <summary>
        Gets the <see cref="T:Sitecore.Marketing.Definitions.DefinitionManagerFactory" /> which provides access to the Marketing Operations API Definition Managers.
      </summary>
    </Definitions>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionServices.Taxonomies">
            <Taxonomies>
      <summary>
        Gets the <see cref="T:Sitecore.Marketing.Taxonomy.ITaxonomyManagerProvider" /> which provides access to the Marketing Operations API Taxonomy Manager Provider.
      </summary>
    </Taxonomies>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Rules.IConditionServices.Reference">
            <Reference>
      <summary>
        Gets the <see cref="T:Sitecore.Xdb.ReferenceData.Service.IReferenceDataService" /> which provides access to the Reference Data Service.
      </summary>
    </Reference>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.CustomValuesDictionaryJsonConverter">
            <summary>
            <see cref="T:Newtonsoft.Json.JsonConverter"/> that maps <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.ICustomValuesDictionary"/> to <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Collections.CustomValuesDictionary"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.CustomValuesDictionaryJsonConverter.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            The created object.
            </returns>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter">
            <summary>
            <see cref="T:Newtonsoft.Json.JsonConverter"/> that is used to (de)serialize <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Pool.LiveEventData"/>.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter.#ctor(Sitecore.XConnect.Schema.XdbModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter"/> class.
            </summary>
            <param name="xdbModel">The semantic definition of data stored in xDB.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter.SerializerSettings">
            <summary>
            Specifies the settings on a <see cref="T:Newtonsoft.Json.JsonSerializer" /> object.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.LiveEventDataJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.IConditionSerializer">
            <summary>
            Defines a serializer used to serialize and deserialize conditions.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.IConditionSerializer.Serialize(Sitecore.Framework.Rules.ICondition)">
            <Serialize>
      <summary>Serialize a condition to a string.</summary>
      <param name="condition">The condition to serialize.</param>
      <returns>The string representation of the condition.</returns>
    </Serialize>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.IConditionSerializer.Deserialize(System.String)">
            <Deserialize>
      <summary>Deserialize a condition from a string.</summary>
      <param name="ruleText">The string the deserialize the condition from.</param>
      <returns>The deserialized condition.</returns>
    </Deserialize>
        </member>
        <member name="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer">
            <summary>
            An <see cref="T:Sitecore.Xdb.MarketingAutomation.Core.Serialization.IConditionSerializer"/> implementation which serializes the conditions to and from JSON.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.#ctor(Microsoft.Extensions.Logging.ILogger{Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer},Sitecore.Framework.Rules.Registry.IEntityRegistry,System.IServiceProvider)">
            <summary>
            Create a new instance.
            </summary>
            <param name="logger">The logger to log messages to.</param>
            <param name="registry">The <see cref="T:Sitecore.Framework.Rules.Registry.IEntityRegistry"/> used to locate conditions.</param>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> used to locate services.</param>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.#ctor(Microsoft.Extensions.Logging.ILogger{Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer},Sitecore.Framework.Rules.Serialization.IRuleMetadataMapper)">
            <summary>
            Create a new instance.
            </summary>
            <param name="logger">The logger to log messages to.</param>
            <param name="mapper">The <see cref="T:Sitecore.Framework.Rules.Serialization.IRuleMetadataMapper"/> used to map conditions to a serializable format.</param>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.Logger">
            <summary>
            The logger to log messages to.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.JsonSerializerSettings">
            <summary>
            Gets the settings for the JSON serializer.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.Mapper">
            <summary>
            The <see cref="T:Sitecore.Framework.Rules.Serialization.IRuleMetadataMapper"/> used to map conditions to a serializable format.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.Serialize(Sitecore.Framework.Rules.ICondition)">
            <Serialize>
      <summary>Serialize a condition to a string.</summary>
      <param name="condition">The condition to serialize.</param>
      <returns>The string representation of the condition.</returns>
    </Serialize>
        </member>
        <member name="M:Sitecore.Xdb.MarketingAutomation.Core.Serialization.JsonConditionSerializer.Deserialize(System.String)">
            <Deserialize>
      <summary>Deserialize a condition from a string.</summary>
      <param name="ruleText">The string the deserialize the condition from.</param>
      <returns>The deserialized condition.</returns>
    </Deserialize>
        </member>
    </members>
</doc>
